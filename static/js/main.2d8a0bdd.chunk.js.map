{"version":3,"sources":["w3color.js","gradationGridData.js","GradationDemo.js","CustomGradation.js","App.js","index.js"],"names":["usedColors","colorNames","hexs","w3color","color","elmnt","this","attachValues","c","x","y","typ","arrlength","i","opacity","match","a","hue","sat","rgb","arr","colornames","colorhexs","w3trim","toLowerCase","substr","toUpperCase","isNaN","length","indexOf","split","replace","red","green","blue","lightness","whiteness","blackness","cyan","magenta","yellow","black","ncol","valid","Number","Math","round","parseInt","r","g","b","push","hslToRgb","hwbToRgb","white","letter","percent","h","ncolToRgb","m","k","min","cmykToRgb","ncs","chroma","bc","black1","chroma1","factor1","blue1","red1","red2","green1","green2","blue2","factor2","grey","sqrt","pow","ncsToRgb","getColorArr","isHex","colorObject","toColorObject","style","backgroundColor","toRgbString","s","hsl","hwb","cmyk","max","l","maxcolor","rgbToHsl","w","rgbToHwb","rgbToCmyk","hueToNcol","toFixed","light","t1","t2","hueToRgb","tot","rgbArr","toHex","n","hex","toString","prototype","toRgbaString","toHwbString","toHwbStringDecimal","toHwbaString","toHslString","toHslStringDecimal","toHslaString","toCmykString","toCmykStringDecimal","toNcolString","toNcolStringDecimal","toNcolaString","toName","toHexString","toRgb","toHsl","toHwb","toCmyk","toNcol","isDark","saturate","desaturate","lighter","darker","initialColors","values3","map","array","value","GradationDemo","props","numColors","colors","setColors","onDelete","getHeatMapColor","idx1","idx2","fractBetween","floor","className","values","gradation","content","width","height","labels","label","display","justifyContent","renderGradation","border","index","key","marginBottom","onChange","e","newColors","slice","target","num","onChangeColor","type","background","text","onClick","textAlign","marginTop","marginRight","renderButton","CustomGradation","useState","number","setNumber","count","setCount","additionalDemoData","setAdditionalDemoData","demos","Object","keys","forEach","newData","onSetAdditionalDemoData","renderDemo","mode","App","pressureRange","selectedColor","setPressures","inputMode","useEffect","generatePressures","pressures","random","ReactDOM","render","document","getElementById"],"mappings":"yKACaA,G,yEAAa,CACxB,QACA,YACA,QACA,WACA,WACA,YACA,cACA,iBACA,aACA,gBACA,gBACA,YACA,cACA,YACA,OACA,QACA,YACA,aACA,aACA,iBACA,OACA,gBACA,SACA,WACA,YACA,YACA,OACA,WAGWC,EAAa,CACxB,YACA,eACA,OACA,aACA,QACA,QACA,SACA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,eAGWC,EAAO,CACla,aACb,SAASC,EAAQC,EAAOC,GACtB,OAAMC,gBAAgBH,EAGD,kBAAVC,EACFA,GAETE,KAAKC,aAuPP,SAAuBC,GACrB,IAAIC,EACFC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EARAC,EAAM,GASNC,EAAa,GACbC,EAAY,GACdd,EAAIe,EAAOf,EAAEgB,eACbf,EAAID,EAAEiB,OAAO,EAAG,G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,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,G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","file":"static/js/main.2d8a0bdd.chunk.js","sourcesContent":["/* w3color.js ver.1.18 by w3schools.com (Do not remove this line)*/\nexport const usedColors = [\n  'Brown',\n  'CadetBlue',\n  'Coral',\n  'DarkBlue',\n  'DarkCyan',\n  'DarkGreen',\n  'DarkMagenta',\n  'DarkOliveGreen',\n  'DarkOrange',\n  'DarkSlateBlue',\n  'DarkSlateGrey',\n  'FireBrick',\n  'ForestGreen',\n  'GoldenRod',\n  'Gray',\n  'Green',\n  'IndianRed',\n  'LightCoral',\n  'MediumBlue',\n  'MediumSeaGreen',\n  'Navy',\n  'RebeccaPurple',\n  'Salmon',\n  'SeaGreen',\n  'SlateBlue',\n  'SteelBlue',\n  'Teal',\n  'Tomato'\n];\n\nexport const colorNames = [\n  'AliceBlue',\n  'AntiqueWhite',\n  'Aqua',\n  'Aquamarine',\n  'Azure',\n  'Beige',\n  'Bisque',\n  'Black',\n  'BlanchedAlmond',\n  'Blue',\n  'BlueViolet',\n  'Brown',\n  'BurlyWood',\n  'CadetBlue',\n  'Chartreuse',\n  'Chocolate',\n  'Coral',\n  'CornflowerBlue',\n  'Cornsilk',\n  'Crimson',\n  'Cyan',\n  'DarkBlue',\n  'DarkCyan',\n  'DarkGoldenRod',\n  'DarkGray',\n  'DarkGrey',\n  'DarkGreen',\n  'DarkKhaki',\n  'DarkMagenta',\n  'DarkOliveGreen',\n  'DarkOrange',\n  'DarkOrchid',\n  'DarkRed',\n  'DarkSalmon',\n  'DarkSeaGreen',\n  'DarkSlateBlue',\n  'DarkSlateGray',\n  'DarkSlateGrey',\n  'DarkTurquoise',\n  'DarkViolet',\n  'DeepPink',\n  'DeepSkyBlue',\n  'DimGray',\n  'DimGrey',\n  'DodgerBlue',\n  'FireBrick',\n  'FloralWhite',\n  'ForestGreen',\n  'Fuchsia',\n  'Gainsboro',\n  'GhostWhite',\n  'Gold',\n  'GoldenRod',\n  'Gray',\n  'Grey',\n  'Green',\n  'GreenYellow',\n  'HoneyDew',\n  'HotPink',\n  'IndianRed',\n  'Indigo',\n  'Ivory',\n  'Khaki',\n  'Lavender',\n  'LavenderBlush',\n  'LawnGreen',\n  'LemonChiffon',\n  'LightBlue',\n  'LightCoral',\n  'LightCyan',\n  'LightGoldenRodYellow',\n  'LightGray',\n  'LightGrey',\n  'LightGreen',\n  'LightPink',\n  'LightSalmon',\n  'LightSeaGreen',\n  'LightSkyBlue',\n  'LightSlateGray',\n  'LightSlateGrey',\n  'LightSteelBlue',\n  'LightYellow',\n  'Lime',\n  'LimeGreen',\n  'Linen',\n  'Magenta',\n  'Maroon',\n  'MediumAquaMarine',\n  'MediumBlue',\n  'MediumOrchid',\n  'MediumPurple',\n  'MediumSeaGreen',\n  'MediumSlateBlue',\n  'MediumSpringGreen',\n  'MediumTurquoise',\n  'MediumVioletRed',\n  'MidnightBlue',\n  'MintCream',\n  'MistyRose',\n  'Moccasin',\n  'NavajoWhite',\n  'Navy',\n  'OldLace',\n  'Olive',\n  'OliveDrab',\n  'Orange',\n  'OrangeRed',\n  'Orchid',\n  'PaleGoldenRod',\n  'PaleGreen',\n  'PaleTurquoise',\n  'PaleVioletRed',\n  'PapayaWhip',\n  'PeachPuff',\n  'Peru',\n  'Pink',\n  'Plum',\n  'PowderBlue',\n  'Purple',\n  'RebeccaPurple',\n  'Red',\n  'RosyBrown',\n  'RoyalBlue',\n  'SaddleBrown',\n  'Salmon',\n  'SandyBrown',\n  'SeaGreen',\n  'SeaShell',\n  'Sienna',\n  'Silver',\n  'SkyBlue',\n  'SlateBlue',\n  'SlateGray',\n  'SlateGrey',\n  'Snow',\n  'SpringGreen',\n  'SteelBlue',\n  'Tan',\n  'Teal',\n  'Thistle',\n  'Tomato',\n  'Turquoise',\n  'Violet',\n  'Wheat',\n  'White',\n  'WhiteSmoke',\n  'Yellow',\n  'YellowGreen'\n];\n\nexport const hexs = [\n  'f0f8ff',\n  'faebd7',\n  '00ffff',\n  '7fffd4',\n  'f0ffff',\n  'f5f5dc',\n  'ffe4c4',\n  '000000',\n  'ffebcd',\n  '0000ff',\n  '8a2be2',\n  'a52a2a',\n  'deb887',\n  '5f9ea0',\n  '7fff00',\n  'd2691e',\n  'ff7f50',\n  '6495ed',\n  'fff8dc',\n  'dc143c',\n  '00ffff',\n  '00008b',\n  '008b8b',\n  'b8860b',\n  'a9a9a9',\n  'a9a9a9',\n  '006400',\n  'bdb76b',\n  '8b008b',\n  '556b2f',\n  'ff8c00',\n  '9932cc',\n  '8b0000',\n  'e9967a',\n  '8fbc8f',\n  '483d8b',\n  '2f4f4f',\n  '2f4f4f',\n  '00ced1',\n  '9400d3',\n  'ff1493',\n  '00bfff',\n  '696969',\n  '696969',\n  '1e90ff',\n  'b22222',\n  'fffaf0',\n  '228b22',\n  'ff00ff',\n  'dcdcdc',\n  'f8f8ff',\n  'ffd700',\n  'daa520',\n  '808080',\n  '808080',\n  '008000',\n  'adff2f',\n  'f0fff0',\n  'ff69b4',\n  'cd5c5c',\n  '4b0082',\n  'fffff0',\n  'f0e68c',\n  'e6e6fa',\n  'fff0f5',\n  '7cfc00',\n  'fffacd',\n  'add8e6',\n  'f08080',\n  'e0ffff',\n  'fafad2',\n  'd3d3d3',\n  'd3d3d3',\n  '90ee90',\n  'ffb6c1',\n  'ffa07a',\n  '20b2aa',\n  '87cefa',\n  '778899',\n  '778899',\n  'b0c4de',\n  'ffffe0',\n  '00ff00',\n  '32cd32',\n  'faf0e6',\n  'ff00ff',\n  '800000',\n  '66cdaa',\n  '0000cd',\n  'ba55d3',\n  '9370db',\n  '3cb371',\n  '7b68ee',\n  '00fa9a',\n  '48d1cc',\n  'c71585',\n  '191970',\n  'f5fffa',\n  'ffe4e1',\n  'ffe4b5',\n  'ffdead',\n  '000080',\n  'fdf5e6',\n  '808000',\n  '6b8e23',\n  'ffa500',\n  'ff4500',\n  'da70d6',\n  'eee8aa',\n  '98fb98',\n  'afeeee',\n  'db7093',\n  'ffefd5',\n  'ffdab9',\n  'cd853f',\n  'ffc0cb',\n  'dda0dd',\n  'b0e0e6',\n  '800080',\n  '663399',\n  'ff0000',\n  'bc8f8f',\n  '4169e1',\n  '8b4513',\n  'fa8072',\n  'f4a460',\n  '2e8b57',\n  'fff5ee',\n  'a0522d',\n  'c0c0c0',\n  '87ceeb',\n  '6a5acd',\n  '708090',\n  '708090',\n  'fffafa',\n  '00ff7f',\n  '4682b4',\n  'd2b48c',\n  '008080',\n  'd8bfd8',\n  'ff6347',\n  '40e0d0',\n  'ee82ee',\n  'f5deb3',\n  'ffffff',\n  'f5f5f5',\n  'ffff00',\n  '9acd32'\n];\n\nexport default function() {\n  function w3color(color, elmnt) {\n    if (!(this instanceof w3color)) {\n      return new w3color(color, elmnt);\n    }\n    if (typeof color === 'object') {\n      return color;\n    }\n    this.attachValues(toColorObject(color));\n    if (elmnt) {\n      elmnt.style.backgroundColor = this.toRgbString();\n    }\n  }\n  w3color.prototype = {\n    toRgbString: function() {\n      return 'rgb(' + this.red + ', ' + this.green + ', ' + this.blue + ')';\n    },\n    toRgbaString: function() {\n      return (\n        'rgba(' +\n        this.red +\n        ', ' +\n        this.green +\n        ', ' +\n        this.blue +\n        ', ' +\n        this.opacity +\n        ')'\n      );\n    },\n    toHwbString: function() {\n      return (\n        'hwb(' +\n        this.hue +\n        ', ' +\n        Math.round(this.whiteness * 100) +\n        '%, ' +\n        Math.round(this.blackness * 100) +\n        '%)'\n      );\n    },\n    toHwbStringDecimal: function() {\n      return (\n        'hwb(' + this.hue + ', ' + this.whiteness + ', ' + this.blackness + ')'\n      );\n    },\n    toHwbaString: function() {\n      return (\n        'hwba(' +\n        this.hue +\n        ', ' +\n        Math.round(this.whiteness * 100) +\n        '%, ' +\n        Math.round(this.blackness * 100) +\n        '%, ' +\n        this.opacity +\n        ')'\n      );\n    },\n    toHslString: function() {\n      return (\n        'hsl(' +\n        this.hue +\n        ', ' +\n        Math.round(this.sat * 100) +\n        '%, ' +\n        Math.round(this.lightness * 100) +\n        '%)'\n      );\n    },\n    toHslStringDecimal: function() {\n      return 'hsl(' + this.hue + ', ' + this.sat + ', ' + this.lightness + ')';\n    },\n    toHslaString: function() {\n      return (\n        'hsla(' +\n        this.hue +\n        ', ' +\n        Math.round(this.sat * 100) +\n        '%, ' +\n        Math.round(this.lightness * 100) +\n        '%, ' +\n        this.opacity +\n        ')'\n      );\n    },\n    toCmykString: function() {\n      return (\n        'cmyk(' +\n        Math.round(this.cyan * 100) +\n        '%, ' +\n        Math.round(this.magenta * 100) +\n        '%, ' +\n        Math.round(this.yellow * 100) +\n        '%, ' +\n        Math.round(this.black * 100) +\n        '%)'\n      );\n    },\n    toCmykStringDecimal: function() {\n      return (\n        'cmyk(' +\n        this.cyan +\n        ', ' +\n        this.magenta +\n        ', ' +\n        this.yellow +\n        ', ' +\n        this.black +\n        ')'\n      );\n    },\n    toNcolString: function() {\n      return (\n        this.ncol +\n        ', ' +\n        Math.round(this.whiteness * 100) +\n        '%, ' +\n        Math.round(this.blackness * 100) +\n        '%'\n      );\n    },\n    toNcolStringDecimal: function() {\n      return this.ncol + ', ' + this.whiteness + ', ' + this.blackness;\n    },\n    toNcolaString: function() {\n      return (\n        this.ncol +\n        ', ' +\n        Math.round(this.whiteness * 100) +\n        '%, ' +\n        Math.round(this.blackness * 100) +\n        '%, ' +\n        this.opacity\n      );\n    },\n    toName: function() {\n      var r,\n        g,\n        b,\n        colorhexs = getColorArr('hexs');\n      for (let i = 0; i < colorhexs.length; i++) {\n        r = parseInt(colorhexs[i].substr(0, 2), 16);\n        g = parseInt(colorhexs[i].substr(2, 2), 16);\n        b = parseInt(colorhexs[i].substr(4, 2), 16);\n        if (this.red === r && this.green === g && this.blue === b) {\n          return getColorArr('names')[i];\n        }\n      }\n      return '';\n    },\n    toHexString: function() {\n      var r = toHex(this.red);\n      var g = toHex(this.green);\n      var b = toHex(this.blue);\n      return '#' + r + g + b;\n    },\n    toRgb: function() {\n      return { r: this.red, g: this.green, b: this.blue, a: this.opacity };\n    },\n    toHsl: function() {\n      return { h: this.hue, s: this.sat, l: this.lightness, a: this.opacity };\n    },\n    toHwb: function() {\n      return {\n        h: this.hue,\n        w: this.whiteness,\n        b: this.blackness,\n        a: this.opacity\n      };\n    },\n    toCmyk: function() {\n      return {\n        c: this.cyan,\n        m: this.magenta,\n        y: this.yellow,\n        k: this.black,\n        a: this.opacity\n      };\n    },\n    toNcol: function() {\n      return {\n        ncol: this.ncol,\n        w: this.whiteness,\n        b: this.blackness,\n        a: this.opacity\n      };\n    },\n    isDark: function(n) {\n      var m = n || 128;\n      return (this.red * 299 + this.green * 587 + this.blue * 114) / 1000 < m;\n    },\n    saturate: function(n) {\n      var x, rgb, color;\n      x = n / 100 || 0.1;\n      this.sat += x;\n      if (this.sat > 1) {\n        this.sat = 1;\n      }\n      rgb = hslToRgb(this.hue, this.sat, this.lightness);\n      color = colorObject(rgb, this.opacity, this.hue, this.sat);\n      this.attachValues(color);\n    },\n    desaturate: function(n) {\n      var x, rgb, color;\n      x = n / 100 || 0.1;\n      this.sat -= x;\n      if (this.sat < 0) {\n        this.sat = 0;\n      }\n      rgb = hslToRgb(this.hue, this.sat, this.lightness);\n      color = colorObject(rgb, this.opacity, this.hue, this.sat);\n      this.attachValues(color);\n    },\n    lighter: function(n) {\n      var x, rgb, color;\n      x = n / 100 || 0.1;\n      this.lightness += x;\n      if (this.lightness > 1) {\n        this.lightness = 1;\n      }\n      rgb = hslToRgb(this.hue, this.sat, this.lightness);\n      color = colorObject(rgb, this.opacity, this.hue, this.sat);\n      this.attachValues(color);\n    },\n    darker: function(n) {\n      var x, rgb, color;\n      x = n / 100 || 0.1;\n      this.lightness -= x;\n      if (this.lightness < 0) {\n        this.lightness = 0;\n      }\n      rgb = hslToRgb(this.hue, this.sat, this.lightness);\n      color = colorObject(rgb, this.opacity, this.hue, this.sat);\n      this.attachValues(color);\n    },\n    attachValues: function(color) {\n      this.red = color.red;\n      this.green = color.green;\n      this.blue = color.blue;\n      this.hue = color.hue;\n      this.sat = color.sat;\n      this.lightness = color.lightness;\n      this.whiteness = color.whiteness;\n      this.blackness = color.blackness;\n      this.cyan = color.cyan;\n      this.magenta = color.magenta;\n      this.yellow = color.yellow;\n      this.black = color.black;\n      this.ncol = color.ncol;\n      this.opacity = color.opacity;\n      this.valid = color.valid;\n    }\n  };\n\n  function toColorObject(c) {\n    var x,\n      y,\n      typ,\n      arr = [],\n      arrlength,\n      i,\n      opacity,\n      match,\n      a,\n      hue,\n      sat,\n      rgb,\n      colornames = [],\n      colorhexs = [];\n    c = w3trim(c.toLowerCase());\n    x = c.substr(0, 1).toUpperCase();\n    y = c.substr(1);\n    a = 1;\n    if (\n      (x === 'R' ||\n        x === 'Y' ||\n        x === 'G' ||\n        x === 'C' ||\n        x === 'B' ||\n        x === 'M' ||\n        x === 'W') &&\n      !isNaN(y)\n    ) {\n      if (c.length === 6 && c.indexOf(',') === -1) {\n      } else {\n        c = 'ncol(' + c + ')';\n      }\n    }\n    if (c.length !== 3 && c.length !== 6 && !isNaN(c)) {\n      c = 'ncol(' + c + ')';\n    }\n    if (c.indexOf(',') > 0 && c.indexOf('(') === -1) {\n      c = 'ncol(' + c + ')';\n    }\n    if (\n      c.substr(0, 3) === 'rgb' ||\n      c.substr(0, 3) === 'hsl' ||\n      c.substr(0, 3) === 'hwb' ||\n      c.substr(0, 4) === 'ncol' ||\n      c.substr(0, 4) === 'cmyk'\n    ) {\n      if (c.substr(0, 4) === 'ncol') {\n        if (c.split(',').length === 4 && c.indexOf('ncola') === -1) {\n          c = c.replace('ncol', 'ncola');\n        }\n        typ = 'ncol';\n        c = c.substr(4);\n      } else if (c.substr(0, 4) === 'cmyk') {\n        typ = 'cmyk';\n        c = c.substr(4);\n      } else {\n        typ = c.substr(0, 3);\n        c = c.substr(3);\n      }\n      arrlength = 3;\n      opacity = false;\n      if (c.substr(0, 1).toLowerCase() === 'a') {\n        arrlength = 4;\n        opacity = true;\n        c = c.substr(1);\n      } else if (typ === 'cmyk') {\n        arrlength = 4;\n        if (c.split(',').length === 5) {\n          arrlength = 5;\n          opacity = true;\n        }\n      }\n      c = c.replace('(', '');\n      c = c.replace(')', '');\n      arr = c.split(',');\n      if (typ === 'rgb') {\n        if (arr.length !== arrlength) {\n          return emptyObject();\n        }\n        for (i = 0; i < arrlength; i++) {\n          if (arr[i] === '' || arr[i] === ' ') {\n            arr[i] = '0';\n          }\n          if (arr[i].indexOf('%') > -1) {\n            arr[i] = arr[i].replace('%', '');\n            arr[i] = Number(arr[i] / 100);\n            if (i < 3) {\n              arr[i] = Math.round(arr[i] * 255);\n            }\n          }\n          if (isNaN(arr[i])) {\n            return emptyObject();\n          }\n          if (parseInt(arr[i]) > 255) {\n            arr[i] = 255;\n          }\n          if (i < 3) {\n            arr[i] = parseInt(arr[i]);\n          }\n          if (i === 3 && Number(arr[i]) > 1) {\n            arr[i] = 1;\n          }\n        }\n        rgb = { r: arr[0], g: arr[1], b: arr[2] };\n        if (opacity === true) {\n          a = Number(arr[3]);\n        }\n      }\n      if (typ === 'hsl' || typ === 'hwb' || typ === 'ncol') {\n        while (arr.length < arrlength) {\n          arr.push('0');\n        }\n        if (typ === 'hsl' || typ === 'hwb') {\n          if (parseInt(arr[0]) >= 360) {\n            arr[0] = 0;\n          }\n        }\n        for (i = 1; i < arrlength; i++) {\n          if (arr[i].indexOf('%') > -1) {\n            arr[i] = arr[i].replace('%', '');\n            arr[i] = Number(arr[i]);\n            if (isNaN(arr[i])) {\n              return emptyObject();\n            }\n            arr[i] = arr[i] / 100;\n          } else {\n            arr[i] = Number(arr[i]);\n          }\n          if (Number(arr[i]) > 1) {\n            arr[i] = 1;\n          }\n          if (Number(arr[i]) < 0) {\n            arr[i] = 0;\n          }\n        }\n        if (typ === 'hsl') {\n          rgb = hslToRgb(arr[0], arr[1], arr[2]);\n          hue = Number(arr[0]);\n          sat = Number(arr[1]);\n        }\n        if (typ === 'hwb') {\n          rgb = hwbToRgb(arr[0], arr[1], arr[2]);\n        }\n        if (typ === 'ncol') {\n          rgb = ncolToRgb(arr[0], arr[1], arr[2]);\n        }\n        if (opacity === true) {\n          a = Number(arr[3]);\n        }\n      }\n      if (typ === 'cmyk') {\n        while (arr.length < arrlength) {\n          arr.push('0');\n        }\n        for (i = 0; i < arrlength; i++) {\n          if (arr[i].indexOf('%') > -1) {\n            arr[i] = arr[i].replace('%', '');\n            arr[i] = Number(arr[i]);\n            if (isNaN(arr[i])) {\n              return emptyObject();\n            }\n            arr[i] = arr[i] / 100;\n          } else {\n            arr[i] = Number(arr[i]);\n          }\n          if (Number(arr[i]) > 1) {\n            arr[i] = 1;\n          }\n          if (Number(arr[i]) < 0) {\n            arr[i] = 0;\n          }\n        }\n        rgb = cmykToRgb(arr[0], arr[1], arr[2], arr[3]);\n        if (opacity === true) {\n          a = Number(arr[4]);\n        }\n      }\n    } else if (c.substr(0, 3) === 'ncs') {\n      rgb = ncsToRgb(c);\n    } else {\n      match = false;\n      colornames = getColorArr('names');\n      for (i = 0; i < colornames.length; i++) {\n        if (c.toLowerCase() === colornames[i].toLowerCase()) {\n          colorhexs = getColorArr('hexs');\n          match = true;\n          rgb = {\n            r: parseInt(colorhexs[i].substr(0, 2), 16),\n            g: parseInt(colorhexs[i].substr(2, 2), 16),\n            b: parseInt(colorhexs[i].substr(4, 2), 16)\n          };\n          break;\n        }\n      }\n      if (match === false) {\n        c = c.replace('#', '');\n        if (c.length === 3) {\n          c =\n            c.substr(0, 1) +\n            c.substr(0, 1) +\n            c.substr(1, 1) +\n            c.substr(1, 1) +\n            c.substr(2, 1) +\n            c.substr(2, 1);\n        }\n        for (i = 0; i < c.length; i++) {\n          if (!isHex(c.substr(i, 1))) {\n            return emptyObject();\n          }\n        }\n        arr[0] = parseInt(c.substr(0, 2), 16);\n        arr[1] = parseInt(c.substr(2, 2), 16);\n        arr[2] = parseInt(c.substr(4, 2), 16);\n        for (i = 0; i < 3; i++) {\n          if (isNaN(arr[i])) {\n            return emptyObject();\n          }\n        }\n        rgb = {\n          r: arr[0],\n          g: arr[1],\n          b: arr[2]\n        };\n      }\n    }\n    return colorObject(rgb, a, hue, sat);\n  }\n  function colorObject(rgb, a, h, s) {\n    var hsl, hwb, cmyk, ncol, color, hue, sat;\n    if (!rgb) {\n      return emptyObject();\n    }\n    if (a === null) {\n      a = 1;\n    }\n    hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\n    hwb = rgbToHwb(rgb.r, rgb.g, rgb.b);\n    cmyk = rgbToCmyk(rgb.r, rgb.g, rgb.b);\n    hue = h || hsl.h;\n    sat = s || hsl.s;\n    ncol = hueToNcol(hue);\n    color = {\n      red: rgb.r,\n      green: rgb.g,\n      blue: rgb.b,\n      hue: hue,\n      sat: sat,\n      lightness: hsl.l,\n      whiteness: hwb.w,\n      blackness: hwb.b,\n      cyan: cmyk.c,\n      magenta: cmyk.m,\n      yellow: cmyk.y,\n      black: cmyk.k,\n      ncol: ncol,\n      opacity: a,\n      valid: true\n    };\n    color = roundDecimals(color);\n    return color;\n  }\n  function emptyObject() {\n    return {\n      red: 0,\n      green: 0,\n      blue: 0,\n      hue: 0,\n      sat: 0,\n      lightness: 0,\n      whiteness: 0,\n      blackness: 0,\n      cyan: 0,\n      magenta: 0,\n      yellow: 0,\n      black: 0,\n      ncol: 'R',\n      opacity: 1,\n      valid: false\n    };\n  }\n  function getColorArr(x) {\n    if (x === 'names') {\n      return colorNames;\n    }\n    if (x === 'hexs') {\n      return hexs;\n    }\n  }\n  function roundDecimals(c) {\n    c.red = Number(c.red.toFixed(0));\n    c.green = Number(c.green.toFixed(0));\n    c.blue = Number(c.blue.toFixed(0));\n    c.hue = Number(c.hue.toFixed(0));\n    c.sat = Number(c.sat.toFixed(2));\n    c.lightness = Number(c.lightness.toFixed(2));\n    c.whiteness = Number(c.whiteness.toFixed(2));\n    c.blackness = Number(c.blackness.toFixed(2));\n    c.cyan = Number(c.cyan.toFixed(2));\n    c.magenta = Number(c.magenta.toFixed(2));\n    c.yellow = Number(c.yellow.toFixed(2));\n    c.black = Number(c.black.toFixed(2));\n    c.ncol = c.ncol.substr(0, 1) + Math.round(Number(c.ncol.substr(1)));\n    c.opacity = Number(c.opacity.toFixed(2));\n    return c;\n  }\n  function hslToRgb(hue, sat, light) {\n    var t1, t2, r, g, b;\n    hue = hue / 60;\n    if (light <= 0.5) {\n      t2 = light * (sat + 1);\n    } else {\n      t2 = light + sat - light * sat;\n    }\n    t1 = light * 2 - t2;\n    r = hueToRgb(t1, t2, hue + 2) * 255;\n    g = hueToRgb(t1, t2, hue) * 255;\n    b = hueToRgb(t1, t2, hue - 2) * 255;\n    return { r: r, g: g, b: b };\n  }\n  function hueToRgb(t1, t2, hue) {\n    if (hue < 0) hue += 6;\n    if (hue >= 6) hue -= 6;\n    if (hue < 1) return (t2 - t1) * hue + t1;\n    else if (hue < 3) return t2;\n    else if (hue < 4) return (t2 - t1) * (4 - hue) + t1;\n    else return t1;\n  }\n  function hwbToRgb(hue, white, black) {\n    var i,\n      rgb,\n      rgbArr = [],\n      tot;\n    rgb = hslToRgb(hue, 1, 0.5);\n    rgbArr[0] = rgb.r / 255;\n    rgbArr[1] = rgb.g / 255;\n    rgbArr[2] = rgb.b / 255;\n    tot = white + black;\n    if (tot > 1) {\n      white = Number((white / tot).toFixed(2));\n      black = Number((black / tot).toFixed(2));\n    }\n    for (i = 0; i < 3; i++) {\n      rgbArr[i] *= 1 - white - black;\n      rgbArr[i] += white;\n      rgbArr[i] = Number(rgbArr[i] * 255);\n    }\n    return { r: rgbArr[0], g: rgbArr[1], b: rgbArr[2] };\n  }\n  function cmykToRgb(c, m, y, k) {\n    var r, g, b;\n    r = 255 - Math.min(1, c * (1 - k) + k) * 255;\n    g = 255 - Math.min(1, m * (1 - k) + k) * 255;\n    b = 255 - Math.min(1, y * (1 - k) + k) * 255;\n    return { r: r, g: g, b: b };\n  }\n  function ncolToRgb(ncol, white, black) {\n    var letter, percent, h, w, b;\n    h = ncol;\n    if (isNaN(ncol.substr(0, 1))) {\n      letter = ncol.substr(0, 1).toUpperCase();\n      percent = ncol.substr(1);\n      if (percent === '') {\n        percent = 0;\n      }\n      percent = Number(percent);\n      if (isNaN(percent)) {\n        return false;\n      }\n      if (letter === 'R') {\n        h = 0 + percent * 0.6;\n      }\n      if (letter === 'Y') {\n        h = 60 + percent * 0.6;\n      }\n      if (letter === 'G') {\n        h = 120 + percent * 0.6;\n      }\n      if (letter === 'C') {\n        h = 180 + percent * 0.6;\n      }\n      if (letter === 'B') {\n        h = 240 + percent * 0.6;\n      }\n      if (letter === 'M') {\n        h = 300 + percent * 0.6;\n      }\n      if (letter === 'W') {\n        h = 0;\n        white = 1 - percent / 100;\n        black = percent / 100;\n      }\n    }\n    return hwbToRgb(h, white, black);\n  }\n  function hueToNcol(hue) {\n    while (hue >= 360) {\n      hue = hue - 360;\n    }\n    if (hue < 60) {\n      return 'R' + hue / 0.6;\n    }\n    if (hue < 120) {\n      return 'Y' + (hue - 60) / 0.6;\n    }\n    if (hue < 180) {\n      return 'G' + (hue - 120) / 0.6;\n    }\n    if (hue < 240) {\n      return 'C' + (hue - 180) / 0.6;\n    }\n    if (hue < 300) {\n      return 'B' + (hue - 240) / 0.6;\n    }\n    if (hue < 360) {\n      return 'M' + (hue - 300) / 0.6;\n    }\n  }\n  function ncsToRgb(ncs) {\n    var black,\n      chroma,\n      bc,\n      percent,\n      black1,\n      chroma1,\n      red1,\n      factor1,\n      blue1,\n      red1,\n      red2,\n      green1,\n      green2,\n      blue2,\n      max,\n      factor2,\n      grey,\n      r,\n      g,\n      b;\n    ncs = w3trim(ncs).toUpperCase();\n    ncs = ncs.replace('(', '');\n    ncs = ncs.replace(')', '');\n    ncs = ncs.replace('NCS', 'NCS ');\n    ncs = ncs.replace(/  /g, ' ');\n    if (ncs.indexOf('NCS') === -1) {\n      ncs = 'NCS ' + ncs;\n    }\n    ncs = ncs.match(\n      /^(?:NCS|NCS\\sS)\\s(\\d{2})(\\d{2})-(N|[A-Z])(\\d{2})?([A-Z])?$/\n    );\n    if (ncs === null) return false;\n    black = parseInt(ncs[1], 10);\n    chroma = parseInt(ncs[2], 10);\n    bc = ncs[3];\n    if (bc !== 'N' && bc !== 'Y' && bc !== 'R' && bc !== 'B' && bc !== 'G') {\n      return false;\n    }\n    percent = parseInt(ncs[4], 10) || 0;\n    if (bc !== 'N') {\n      black1 = 1.05 * black - 5.25;\n      chroma1 = chroma;\n      if (bc === 'Y' && percent <= 60) {\n        red1 = 1;\n      } else if (\n        (bc === 'Y' && percent > 60) ||\n        (bc === 'R' && percent <= 80)\n      ) {\n        if (bc === 'Y') {\n          factor1 = percent - 60;\n        } else {\n          factor1 = percent + 40;\n        }\n        red1 = (Math.sqrt(14884 - Math.pow(factor1, 2)) - 22) / 100;\n      } else if ((bc === 'R' && percent > 80) || bc === 'B') {\n        red1 = 0;\n      } else if (bc === 'G') {\n        factor1 = percent - 170;\n        red1 = (Math.sqrt(33800 - Math.pow(factor1, 2)) - 70) / 100;\n      }\n      if (bc === 'Y' && percent <= 80) {\n        blue1 = 0;\n      } else if (\n        (bc === 'Y' && percent > 80) ||\n        (bc === 'R' && percent <= 60)\n      ) {\n        if (bc === 'Y') {\n          factor1 = percent - 80 + 20.5;\n        } else {\n          factor1 = percent + 20 + 20.5;\n        }\n        blue1 = (104 - Math.sqrt(11236 - Math.pow(factor1, 2))) / 100;\n      } else if (\n        (bc === 'R' && percent > 60) ||\n        (bc === 'B' && percent <= 80)\n      ) {\n        if (bc === 'R') {\n          factor1 = percent - 60 - 60;\n        } else {\n          factor1 = percent + 40 - 60;\n        }\n        blue1 = (Math.sqrt(10000 - Math.pow(factor1, 2)) - 10) / 100;\n      } else if (\n        (bc === 'B' && percent > 80) ||\n        (bc === 'G' && percent <= 40)\n      ) {\n        if (bc === 'B') {\n          factor1 = percent - 80 - 131;\n        } else {\n          factor1 = percent + 20 - 131;\n        }\n        blue1 = (122 - Math.sqrt(19881 - Math.pow(factor1, 2))) / 100;\n      } else if (bc === 'G' && percent > 40) {\n        blue1 = 0;\n      }\n      if (bc === 'Y') {\n        green1 = (85 - (17 / 20) * percent) / 100;\n      } else if (bc === 'R' && percent <= 60) {\n        green1 = 0;\n      } else if (bc === 'R' && percent > 60) {\n        factor1 = percent - 60 + 35;\n        green1 = (67.5 - Math.sqrt(5776 - Math.pow(factor1, 2))) / 100;\n      } else if (bc === 'B' && percent <= 60) {\n        factor1 = 1 * percent - 68.5;\n        green1 = (6.5 + Math.sqrt(7044.5 - Math.pow(factor1, 2))) / 100;\n      } else if (\n        (bc === 'B' && percent > 60) ||\n        (bc === 'G' && percent <= 60)\n      ) {\n        green1 = 0.9;\n      } else if (bc === 'G' && percent > 60) {\n        factor1 = percent - 60;\n        green1 = (90 - (1 / 8) * factor1) / 100;\n      }\n      factor1 = (red1 + green1 + blue1) / 3;\n      red2 = ((factor1 - red1) * (100 - chroma1)) / 100 + red1;\n      green2 = ((factor1 - green1) * (100 - chroma1)) / 100 + green1;\n      blue2 = ((factor1 - blue1) * (100 - chroma1)) / 100 + blue1;\n      if (red2 > green2 && red2 > blue2) {\n        max = red2;\n      } else if (green2 > red2 && green2 > blue2) {\n        max = green2;\n      } else if (blue2 > red2 && blue2 > green2) {\n        max = blue2;\n      } else {\n        max = (red2 + green2 + blue2) / 3;\n      }\n      factor2 = 1 / max;\n      r = parseInt(((red2 * factor2 * (100 - black1)) / 100) * 255, 10);\n      g = parseInt(((green2 * factor2 * (100 - black1)) / 100) * 255, 10);\n      b = parseInt(((blue2 * factor2 * (100 - black1)) / 100) * 255, 10);\n      if (r > 255) {\n        r = 255;\n      }\n      if (g > 255) {\n        g = 255;\n      }\n      if (b > 255) {\n        b = 255;\n      }\n      if (r < 0) {\n        r = 0;\n      }\n      if (g < 0) {\n        g = 0;\n      }\n      if (b < 0) {\n        b = 0;\n      }\n    } else {\n      grey = parseInt((1 - black / 100) * 255, 10);\n      if (grey > 255) {\n        grey = 255;\n      }\n      if (grey < 0) {\n        grey = 0;\n      }\n      r = grey;\n      g = grey;\n      b = grey;\n    }\n    return {\n      r: r,\n      g: g,\n      b: b\n    };\n  }\n  function rgbToHsl(r, g, b) {\n    var min,\n      max,\n      i,\n      l,\n      s,\n      maxcolor,\n      h,\n      rgb = [];\n    rgb[0] = r / 255;\n    rgb[1] = g / 255;\n    rgb[2] = b / 255;\n    min = rgb[0];\n    max = rgb[0];\n    maxcolor = 0;\n    for (i = 0; i < rgb.length - 1; i++) {\n      if (rgb[i + 1] <= min) {\n        min = rgb[i + 1];\n      }\n      if (rgb[i + 1] >= max) {\n        max = rgb[i + 1];\n        maxcolor = i + 1;\n      }\n    }\n    if (maxcolor === 0) {\n      h = (rgb[1] - rgb[2]) / (max - min);\n    }\n    if (maxcolor === 1) {\n      h = 2 + (rgb[2] - rgb[0]) / (max - min);\n    }\n    if (maxcolor === 2) {\n      h = 4 + (rgb[0] - rgb[1]) / (max - min);\n    }\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h = h * 60;\n    if (h < 0) {\n      h = h + 360;\n    }\n    l = (min + max) / 2;\n    if (min === max) {\n      s = 0;\n    } else {\n      if (l < 0.5) {\n        s = (max - min) / (max + min);\n      } else {\n        s = (max - min) / (2 - max - min);\n      }\n    }\n    s = s;\n    return { h: h, s: s, l: l };\n  }\n  function rgbToHwb(r, g, b) {\n    var h, w, bl, min, max, chroma;\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    max = Math.max(r, g, b);\n    min = Math.min(r, g, b);\n    chroma = max - min;\n    if (chroma === 0) {\n      h = 0;\n    } else if (r === max) {\n      h = (((g - b) / chroma) % 6) * 360;\n    } else if (g === max) {\n      h = (((b - r) / chroma + 2) % 6) * 360;\n    } else {\n      h = (((r - g) / chroma + 4) % 6) * 360;\n    }\n    w = min;\n    bl = 1 - max;\n    return { h: h, w: w, b: bl };\n  }\n  function rgbToCmyk(r, g, b) {\n    var c, m, y, k, max;\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    max = Math.max(r, g, b);\n    k = 1 - max;\n    if (k === 1) {\n      c = 0;\n      m = 0;\n      y = 0;\n    } else {\n      c = (1 - r - k) / (1 - k);\n      m = (1 - g - k) / (1 - k);\n      y = (1 - b - k) / (1 - k);\n    }\n    return { c: c, m: m, y: y, k: k };\n  }\n  function toHex(n) {\n    var hex = n.toString(16);\n    while (hex.length < 2) {\n      hex = '0' + hex;\n    }\n    return hex;\n  }\n  function cl(x) {\n    console.log(x);\n  }\n  function w3trim(x) {\n    return x.replace(/^\\s+|\\s+$/g, '');\n  }\n  function isHex(x) {\n    return '0123456789ABCDEFabcdef'.indexOf(x) > -1;\n  }\n  return w3color;\n}\n","export const initialColors = [\n  [50, 70, 185],\n  [100, 142, 189],\n  [162, 201, 226],\n  [220, 238, 246],\n  [254, 254, 205],\n  [247, 217, 154],\n  [235, 157, 103],\n  [208, 83, 63],\n  [155, 31, 46]\n];\n\nexport const values = [\n  [\n    0.5,\n    0.5,\n    0.7,\n    0.7,\n    0.7,\n    0.65,\n    0.7,\n    0.7,\n    0.7,\n    0.7,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75\n  ],\n  [\n    0.7,\n    0.5,\n    0.5,\n    0.5,\n    0.5,\n    0.65,\n    0.7,\n    0.7,\n    0.7,\n    0.7,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75\n  ],\n  [\n    0.7,\n    0.7,\n    0.7,\n    0.7,\n    0.7,\n    0.65,\n    0.7,\n    0.7,\n    0.7,\n    0.7,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75\n  ],\n  [\n    0.6,\n    0.6,\n    0.6,\n    0.6,\n    0.6,\n    0.65,\n    0.6,\n    0.6,\n    0.6,\n    0.6,\n    0.65,\n    0.65,\n    0.65,\n    0.65,\n    0.65,\n    0.65,\n    0.65\n  ],\n  [\n    0.6,\n    0.6,\n    0.6,\n    0.6,\n    0.6,\n    0.65,\n    0.6,\n    0.6,\n    0.6,\n    0.6,\n    0.65,\n    0.65,\n    0.65,\n    0.65,\n    0.65,\n    0.65,\n    0.65\n  ],\n  [\n    0.6,\n    0.7,\n    0.7,\n    0.7,\n    0.7,\n    0.65,\n    0.7,\n    0.7,\n    0.7,\n    0.7,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75,\n    0.75\n  ],\n  [\n    0.5,\n    0.5,\n    0.5,\n    0.5,\n    0.5,\n    0.65,\n    0.5,\n    0.5,\n    0.5,\n    0.5,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55\n  ],\n  [\n    0.45,\n    0.45,\n    0.45,\n    0.45,\n    0.45,\n    0.45,\n    0.45,\n    0.45,\n    0.45,\n    0.45,\n    0.45,\n    0.45,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55\n  ],\n  [\n    0.4,\n    0.4,\n    0.4,\n    0.4,\n    0.4,\n    0.65,\n    0.4,\n    0.4,\n    0.4,\n    0.4,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55\n  ],\n  [\n    0.4,\n    0.4,\n    0.4,\n    0.4,\n    0.4,\n    0.65,\n    0.4,\n    0.4,\n    0.4,\n    0.4,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55\n  ],\n  [\n    0.05,\n    0.5,\n    0.5,\n    0.5,\n    0.5,\n    0.65,\n    0.5,\n    0.5,\n    0.5,\n    0.5,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55\n  ],\n  [\n    0.1,\n    0.1,\n    0.1,\n    0.1,\n    0.1,\n    0.15,\n    0.15,\n    0.15,\n    0.5,\n    0.5,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55\n  ],\n  [\n    0.1,\n    0.1,\n    0.1,\n    0.1,\n    0.1,\n    0.15,\n    0.15,\n    0.15,\n    0.5,\n    0.5,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55\n  ],\n  [\n    0.2,\n    0.2,\n    0.2,\n    0.2,\n    0.2,\n    0.25,\n    0.15,\n    0.15,\n    0.5,\n    0.5,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55,\n    0.55\n  ]\n];\n\nexport const values2 = [\n  [1, 1, 1, 1, 10, 20, 10, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 20, 10, 1, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 20, 11, 11, 20, 10, 10],\n  [1, 1, 1, 1, 1, 1, 10, 20, 10, 1, 1, 1, 1, 1, 1, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 21, 11, 1, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 20, 20, 20, 20],\n  [10, 20, 10, 1, 1, 1, 1, 1, 11, 21, 21, 21, 21, 21, 21, 21, 21],\n  [21, 1, 1, 1, 1, 1, 1, 1, 1, 10, 20, 20, 20, 20, 10, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 21, 11, 11],\n  [1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],\n  [20, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 21, 21, 21, 21, 11, 11],\n  [1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 20, 20, 20, 20, 20, 10, 10],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 20, 10, 1, 1, 10, 20, 20],\n  [10, 1, 1, 1, 1, 10, 20, 20, 20, 10, 1, 1, 1, 1, 1, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 20, 10, 1, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 20, 20],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 21, 21],\n  [21, 1, 1, 1, 1, 1, 1, 1, 1, 10, 20, 10, 20, 10, 1, 10, 10],\n  [20, 1, 1, 1, 1, 1, 1, 10, 20, 20, 20, 20, 10, 1, 1, 1, 1]\n].map(array => {\n  return array.map(value => {\n    return value / 100;\n  });\n});\n\nexport const values3 = [\n  [50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50],\n  [51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51],\n  [52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52],\n  [54, 54, 54, 52, 52, 53, 53, 53, 53, 50, 50, 55, 55, 55, 55, 55, 55],\n  [54, 54, 54, 52, 52, 53, 53, 53, 53, 50, 50, 55, 55, 55, 55, 55, 55],\n  [55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n  [55, 55, 55, 55, 55, 55, 55, 55, 55, 50, 50, 50, 50, 50, 50, 60, 60],\n  [50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 60, 60, 60, 60],\n  [50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 65, 65, 65],\n  [40, 40, 40, 40, 40, 40, 41, 42, 43, 44, 50, 50, 50, 50, 50, 70, 70],\n  [40, 40, 40, 40, 40, 40, 41, 42, 43, 44, 44, 44, 50, 50, 50, 50, 70],\n  [40, 40, 40, 40, 40, 40, 41, 42, 43, 44, 44, 50, 50, 50, 50, 50, 50],\n  [40, 40, 40, 40, 40, 41, 42, 43, 44, 44, 50, 50, 50, 50, 50, 50, 50],\n  [50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50],\n  [50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50],\n  [15, 15, 15, 15, 15, 18, 18, 20, 20, 20, 20, 19, 18, 17, 16, 15, 14],\n  [15, 15, 15, 15, 15, 20, 20, 20, 20, 26, 20, 20, 20, 20, 20, 20, 20],\n  [15, 15, 15, 15, 20, 28, 28, 28, 28, 28, 28, 28, 28, 28, 20, 20, 20],\n  [20, 20, 20, 20, 20, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n  [20, 20, 20, 20, 20, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n].map(array => {\n  return array.map(value => {\n    return value / 100;\n  });\n});\n","import React from 'react';\nimport { values3 as values } from './gradationGridData';\nimport './gradation.css';\n\nconst GradationDemo = props => {\n  const { numColors, initialColors, colors, setColors, onDelete } = props;\n\n  const getHeatMapColor = value => {\n    // https://www.andrewnoske.com/wiki/Code_-_heatmaps_and_color_gradients\n    let idx1 = null; // |-- Our desired color will be between these two indexes in \"color\".\n    let idx2 = null; // |\n    let fractBetween = 0; // Fraction between \"idx1\" and \"idx2\" where our value is.\n\n    if (value <= 0) {\n      idx1 = idx2 = 0;\n    } // accounts for an input <=0\n    else if (value >= 1) {\n      idx1 = idx2 = numColors - 1;\n    } // accounts for an input >=0\n    else {\n      value = value * (numColors - 1); // Will multiply value by 3.\n      idx1 = Math.floor(value); // Our desired color will be after this index.\n      idx2 = idx1 + 1; // ... and before this index (inclusive).\n      fractBetween = value - +idx1.toFixed(2); // Distance between the two indexes (0-1).\n    }\n\n    const r =\n      (colors[idx2][0] - colors[idx1][0]) * fractBetween + colors[idx1][0];\n    const g =\n      (colors[idx2][1] - colors[idx1][1]) * fractBetween + colors[idx1][1];\n    const b =\n      (colors[idx2][2] - colors[idx1][2]) * fractBetween + colors[idx1][2];\n\n    return `rgb(${Math.floor(r)}, ${Math.floor(g)}, ${Math.floor(b)})`;\n  };\n\n  const renderGradation = () => {\n    const values = [];\n    for (let i = 0; i < 100; i++) {\n      values.push(i * 0.01);\n    }\n    const gradation = values.map(value => {\n      return (\n        <div\n          style={{\n            backgroundColor: getHeatMapColor(value),\n            color: '#fff',\n            content: '',\n            width: 5,\n            height: 30\n          }}\n        />\n      );\n    });\n\n    let labels = [];\n    for (let i = 0; i < numColors; i++) {\n      labels.push(i);\n    }\n    labels = labels.map(label => {\n      return <span>{label}</span>;\n    });\n\n    return (\n      <div>\n        <div style={{ display: 'flex' }}>{gradation}</div>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {labels}\n        </div>\n      </div>\n    );\n  };\n\n  const renderGrid = () => {\n    return values.map(array => {\n      return array.map(value => {\n        return (\n          <div\n            style={{\n              backgroundColor: getHeatMapColor(value),\n              color: '#fff',\n              content: '',\n              width: 14,\n              height: 10,\n              border: 'solid 1px rgb(232, 232, 232)'\n            }}\n          ></div>\n        );\n      });\n    });\n  };\n\n  const onChangeColor = (e, index) => {\n    const newColors = colors.slice();\n    const color = e.target.value.split(',').map(num => +num);\n    newColors[index] = color;\n    setColors(newColors);\n  };\n\n  const renderButton = () => {\n    const text = initialColors ? 'Reset' : 'Delete';\n    const onClick = initialColors ? () => setColors(initialColors) : onDelete;\n\n    return (\n      <div\n        style={{\n          textAlign: 'right',\n          marginTop: 20,\n          marginRight: 15\n        }}\n      >\n        <button onClick={onClick}>{text}</button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"gradation-demo\">\n      <div className=\"gradation-demo__bar\">{renderGradation()}</div>\n      <div className=\"gradation-demo__body\">\n        <div className=\"gradation-demo__body__left\">{renderGrid()}</div>\n        <div className=\"gradation-demo__body__right\">\n          {colors.map((color, index) => {\n            return (\n              <div key={index} style={{ display: 'flex', marginBottom: 5 }}>\n                <div\n                  className=\"gradation-demo__body__right__item\"\n                  style={{\n                    backgroundColor: `rgb(${color})`\n                  }}\n                >\n                  {index}\n                </div>\n                <span>rgb(</span>\n                <input\n                  value={colors[index]}\n                  onChange={e => onChangeColor(e, index)}\n                  type=\"text\"\n                  style={{ border: 'none', background: '#f1f1f1' }}\n                />\n                <span>)</span>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      {renderButton()}\n    </div>\n  );\n};\n\nexport default GradationDemo;\n","import React, { useState } from 'react';\nimport GradationDemo from './GradationDemo';\nimport { initialColors } from './gradationGridData';\nimport './gradation.css';\n\nconst CustomGradation = props => {\n  const [colors, setColors] = useState(initialColors);\n  const [number, setNumber] = useState(9);\n  const [count, setCount] = useState(0);\n  const [additionalDemoData, setAdditionalDemoData] = useState({});\n\n  const onSetAdditionalDemoData = (index, key, value) => {\n    const newData = { ...additionalDemoData };\n    if (!newData[index]) {\n      newData[index] = {};\n    }\n    newData[index][key] = value;\n    setAdditionalDemoData(newData);\n  };\n\n  const renderDemo = () => {\n    if (!count) {\n      return null;\n    }\n\n    const demos = [];\n    Object.keys(additionalDemoData).forEach(index => {\n      const newData = {};\n      const onDelete = () => {\n        Object.keys(additionalDemoData).forEach(key => {\n          if (key !== index) {\n            newData[key] = additionalDemoData[key];\n          }\n          setAdditionalDemoData(newData);\n          setCount(count - 1);\n        });\n      };\n\n      demos.push(\n        <GradationDemo\n          numColors={additionalDemoData[index].numColors}\n          colors={additionalDemoData[index].colors}\n          setColors={value => onSetAdditionalDemoData(index, 'colors', value)}\n          onDelete={onDelete}\n        />\n      );\n    });\n\n    return demos;\n  };\n\n  const onAddClick = () => {\n    if (!number) {\n      return;\n    }\n\n    const initialColors = [];\n    for (let i = 0; i < number; i++) {\n      initialColors.push([255, 255, 255]);\n    }\n    setCount(count + 1);\n    const newData = {\n      ...additionalDemoData,\n      [count]: {\n        numColors: number,\n        colors: initialColors\n      }\n    };\n\n    setAdditionalDemoData(newData);\n    setNumber(9);\n  };\n\n  return (\n    <div className=\"gradation\">\n      <GradationDemo\n        numColors={9}\n        initialColors={initialColors}\n        colors={colors}\n        setColors={setColors}\n      />\n      {renderDemo()}\n      <div style={{ marginTop: 20 }}>\n        <input\n          type=\"number\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n        />\n        <button onClick={onAddClick}>Add</button>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomGradation;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, InputNumber, Switch, Button, Radio, Input } from 'antd';\nimport 'antd/dist/antd.css';\nimport html2canvas from 'html2canvas';\nimport Palette from './Palette';\nimport CustomGradation from './CustomGradation';\nimport './App.css';\nimport w3color, { usedColors, hexs } from './w3color';\n\nconst mode = ['Color name', 'Hex'];\n\nconst App = () => {\n  const [pressureRange, setPressureRange] = useState(3);\n  const [selectedColor, setSelectedColor] = useState(usedColors[0]);\n  const [showNumber, setShowNumber] = useState(false);\n  const [pressures, setPressures] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [inputMode, setInputMode] = useState(mode[0]);\n  const [hex, setHex] = useState('#' + hexs[0]);\n\n  const w3colorObj = w3color()(inputMode === mode[0] ? selectedColor : hex);\n  const hsl = w3colorObj.toHsl();\n\n  useEffect(() => {\n    setPressures(generatePressures());\n  }, [pressureRange]);\n\n  const randomNumber = () => {\n    return Math.floor(Math.random() * (pressureRange + 1));\n  };\n\n  const generatePressures = () => {\n    let pressures = [];\n    for (let i = 0; i < 240; i++) {\n      pressures.push(randomNumber());\n    }\n    return pressures;\n  };\n\n  const getLightness = level => {\n    const levelOutOf100 = (level / pressureRange) * 100;\n    // 30(dark) - 90(light)\n    return 100 - Math.floor(levelOutOf100 * (60 / 100));\n  };\n\n  const renderLegend = () => {\n    let elems = [];\n    for (let i = pressureRange; i > 0; i--) {\n      elems.push(\n        <div key={i}>\n          <span\n            style={{\n              display: 'inline-block',\n              width: 20,\n              textAlign: 'right',\n              marginRight: 3\n            }}\n          >\n            {i}\n          </span>\n          <span\n            style={{\n              display: 'inline-block',\n              width: 18,\n              height: 18,\n              border: 'solid 1px #111',\n              background: `hsl(${hsl.h}, ${hsl.s * 100}%, ${getLightness(i)}%)`\n            }}\n          />\n        </div>\n      );\n    }\n    return elems;\n  };\n\n  const shot = async () => {\n    html2canvas(document.querySelector('#capture'))\n      .then(canvas => {\n        const imgData = canvas.toDataURL();\n        return imgData;\n      })\n      .then(imgData => {\n        const newRecord = [\n          ...history,\n          [`${selectedColor}-${pressureRange}`, imgData]\n        ];\n        setHistory(newRecord);\n      });\n  };\n\n  if ('temporary') {\n    return <CustomGradation />;\n  }\n\n  return (\n    <Row style={{ padding: 20, height: 'calc(100vh - 40px)' }}>\n      <Col span={5}>\n        <div>Range:</div>\n        <InputNumber\n          min={3}\n          max={10}\n          defaultValue={3}\n          onChange={setPressureRange}\n        />\n        <div style={{ margin: '15px 0 5px 0' }}>\n          <Radio.Group\n            onChange={e => setInputMode(e.target.value)}\n            value={inputMode}\n          >\n            {mode.map(mode => {\n              return (\n                <Radio key={mode} value={mode}>\n                  {mode}\n                </Radio>\n              );\n            })}\n          </Radio.Group>\n        </div>\n\n        {inputMode === mode[0] ? (\n          <Palette\n            selectedColor={selectedColor}\n            setSelectedColor={setSelectedColor}\n          />\n        ) : (\n          <div style={{ margin: '15px 0 5px 0', width: 110, display: 'flex' }}>\n            <Input onChange={e => setHex(e.target.value)} value={hex} />\n            <span\n              style={{\n                display: 'inline-block',\n                width: 50,\n                backgroundColor: hex\n              }}\n            />\n          </div>\n        )}\n      </Col>\n      <Col span={9}>\n        <h2>Sample</h2>\n        <div id=\"capture\" style={{ display: 'flex' }}>\n          <div style={{ marginRight: 10, width: 41 }}>{renderLegend()}</div>\n          <div\n            style={{\n              width: 401,\n              height: 241,\n              borderTop: 'solid 1px lightblue',\n              borderLeft: 'solid 1px lightblue',\n              marginBottom: 10\n            }}\n          >\n            {pressures.map((pressure, index) => {\n              return (\n                <div\n                  key={index}\n                  style={{\n                    width: 20,\n                    height: 20,\n                    float: 'left',\n                    borderRight: 'solid 1px lightblue',\n                    borderBottom: 'solid 1px lightblue',\n                    background: `hsl(${hsl.h}, ${hsl.s * 100}%, ${getLightness(\n                      pressure\n                    )}%)`\n                  }}\n                >\n                  {showNumber && pressure}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <div style={{ marginLeft: 46 }}>\n          <Switch\n            checked={showNumber}\n            style={{ marginRight: 10 }}\n            onChange={() => setShowNumber(!showNumber)}\n          />\n          <span>Show numbers</span>\n        </div>\n        <Button onClick={shot} style={{ marginLeft: 350 }}>\n          Screenshot\n        </Button>\n      </Col>\n      <Col\n        span={10}\n        style={{ height: 'calc(100vh - 40px)', overflow: 'scroll' }}\n      >\n        {history.length ? (\n          <div style={{ marginLeft: 30, marginBottom: 50 }}>\n            <h2>History</h2>\n            <div>\n              {history.map((item, index) => {\n                let attribute = item[0].split('-');\n                return (\n                  <div key={index} style={{ float: 'left', width: '50%' }}>\n                    <div>\n                      Color: {attribute[0]}, Range: {attribute[1]}\n                    </div>\n                    <img src={item[1]} style={{ width: '100%' }} />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : null}\n      </Col>\n    </Row>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}